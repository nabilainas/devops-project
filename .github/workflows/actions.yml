#CI qui teste le backend situÃ© dans la branche master

name: TestAndDeploy
run-name: ${{ github.actor }} is testing out GitHub Actions ðŸš€

on: [push]

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout action-ci
      uses: actions/checkout@v3
      with:
        ref: 'action-ci'
   
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    
    - name: Install dependencies to be able to test
      run: python -m pip install --upgrade pip && pip install requests
        
    - name: Build docker-compose
      run: docker-compose up -d
    
    - name: Run test
      run: |
        sleep 10
        python ./backend/test.py
        
  deploy_to_pprd:
    needs: build_test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout action-ci
        uses: actions/checkout@v3
        with:
          ref: 'action-ci'
      
      - name: Push to result-tests
        uses: s0/git-publish-subdir-action@develop
        env:
          REPO: self
          BRANCH: result-tests # The branch name where you want to push the assets
          FOLDER: backend # The directory where your assets are generated
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # GitHub will automatically add this - you don't need to bother getting a token
          MESSAGE: "Build: ({sha}) {msg} passed the tests with success" # The commit message